name: Javascript CI

on:
  push:
    paths:
      - "app_javascript/**"
      - ".github/workflows/javascript-ci.yml"
  pull_request:
    paths:
      - "app_javascript/**"
      - ".github/workflows/javascript-ci.yml"

jobs:
  javascript-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app_javascript
    
    strategy:
      matrix:
        node-version: ["14", "16"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ matrix.node-version }}-
      
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: subdirapp_javascript/package-lock.json

      - name: Display Node.js version
        run: node --version
      
      - name: Install Node.js dependencies
        run: npm install

      - name: Linting with ESLint
        run: |
          npm run lint
          npx eslint --fix .
        
      - name: Testing JavaScript
        run: npm run test

  snyk-security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Run Snyk to check for Vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true 
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
                --package-manager=npm
                --file=app_javascript/package.json
                --skip-unresolved

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./app_javascript/snyk.sarif

  docker:
    runs-on: ubuntu-latest
    needs: [javascript-build, snyk-security]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set Up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Build & Push to Docker
        uses: docker/build-push-action@v3
        with:
          context: ./app_javascript
          file: ./app_javascript/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/randomquote:latest
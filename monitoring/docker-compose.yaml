version: "3"

networks:
  loki:

services:
  app_python:
    image: arseniy5443/moscowtime:latest
    ports:
      - "80:5000"
    networks:
      - loki
    logging: &logger
      driver: "json-file"
      options:
        max-size: "32m"
        max-file: "5"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    deploy: &resources
      resources:
        limits:
          memory: 300M
  
  app_javascript:
    image: arseniy5443/randomquote:latest
    ports:
      - "5000:3000"
    networks:
      - loki
    logging:
      <<: *logger
    deploy:
      <<: *resources
  
  loki:
    image: grafana/loki:2.9.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    logging:
      <<: *logger
    deploy:
      <<: *resources
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  promtail:
    image: grafana/promtail:2.9.1
    volumes:
      #- /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
    logging:
      <<: *logger
    deploy:
      <<: *resources
    healthcheck:
     test: ["CMD-SHELL", "timeout 10 bash -c 'cat < /dev/null > /dev/tcp/localhost/9080' || exit 1"]
     interval: 30s
     retries: 3

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false

        - name: Prometheus
          type: prometheus
          access: proxy 
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    logging:
      <<: *logger
    deploy:
      <<: *resources
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/config.yml
    command: '--config.file=/etc/prometheus/config.yml'
    ports:
      - "9090:9090"
    networks:
      - loki
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      <<: *logger
    deploy:
      <<: *resources